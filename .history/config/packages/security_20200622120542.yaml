security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  encoders:
    App\Entity\User:
      algorithm: auto
  providers:
    users_in_memory: { memory: null }
    in_database:
      entity:
        class: App\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      access_denied_handler: App\Security\AccessDeniedHandler

      anonymous: lazy
      provider: in_database
        #form_login:
        #login_path: login
        #check_path: login
        #csrf_token_generator: security.csrf.token_manager
      #username_parameter: _username
      #password_parameter: _password
      remember_me:
        secret:   '%kernel.secret%'
        lifetime: 604800 # 1 week in seconds
        path:     /
      logout:
        path: app_logout

      guard:
        authenticators:
          - App\Security\LoginAuthenticator

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    #        - {path: ^/anon, allow_if: "is_anonymous() and !is_authenticated()" }
    - {path: ^/anon, allow_if: "is_anonymous()" ,roles: ROLE_UNCONFIRMED  }
    - {path: ^/reset-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - {path: ^/student, roles: ROLE_STUDENT }
    - {path: ^/teacher, roles: ROLE_TEACHER }
    - {path: ^/covoiturage, roles: ROLE_STUDENT }
    - {path: ^/user, allow_if: "is_authenticated()"}
    - {path: ^/admin, roles: ROLE_ADMIN }

  #access_denied_url: /login